@model PacienteViewModel

@{
    ViewData["Title"] = "Alterar: Paciente";

    var statusAtivo = "";
    if (@Model.Ativo)
    {
        statusAtivo = "checked";
    }
}
<div class="container">
    <div class="row justify-content-center py-1">
        <div class="col-xxl-5 col-xl-6 col-lg-8 col-md-10 col-sm-12 col-xs-12">
            <form id="formPaciente" asp-controller="Paciente" asp-action="Edit" method="post">
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.PessoaId)
                <div class="card">
                    <div class="card-body shadow">
                        <div class="row">
                            <partial name="~/Views/Shared/_headerForm.cshtml" />
                            <div class="cod-12 pb-2">
                                <div class="row pt-1">
                                    <div class="col-10">
                                        <label for="Nome" class="form-label">@Html.LabelFor(model => model.Nome)</label>
                                        <input type="text" name="Nome" id="Nome" class="form-control form-control-sm" maxlength="100" value="@Model.Nome" />
                                    </div>
                                    <div class="col-2">
                                        <div class="pb-3">
                                            <label class="form-check-label" for="chkbAtivo">@Html.LabelFor(model => model.Ativo)</label>
                                        </div>
                                        <div class="form-check form-switch">
                                            <input class="form-check-input" type="checkbox" role="switch" name="chkAtivo" id="chkAtivo" @statusAtivo />
                                        </div>
                                    </div>
                                    <div class="col-8">
                                        <label for="NomeReduzido" class="form-label">@Html.LabelFor(model => model.NomeReduzido)</label>
                                        <input type="text" name="NomeReduzido" id="NomeReduzido" class="form-control form-control-sm" maxlength="40" value="@Model.NomeReduzido" />
                                    </div>
                                    <div class="col-4">
                                        <label for="Cpf" class="form-label">@Html.LabelFor(model => model.Cpf)</label>
                                        <input type="text" name="Cpf" id="Cpf" class="form-control form-control-sm" value="@Model.Cpf" />
                                    </div>
                                    <div class="col-8">
                                        <label for="Email" class="form-label">@Html.LabelFor(model => model.Email)</label>
                                        <input type="email" name="Email" id="Email" class="form-control form-control-sm" maxlength="80" value="@Model.Email" />
                                    </div>
                                    <div class="col-4">
                                        <label for="DataNascimento" class="form-label">@Html.LabelFor(model => model.DataNascimento)</label>
                                        <input type="date" name="DataNascimento" id="DataNascimento" class="form-control form-control-sm" value="@Model.DataNascimento" />
                                    </div>
                                </div>
                            </div>                            
                            <div class="cod-12 border-top border-dark-subtle pt-1">
                                <div class="row">
                                    <div class="col-12 text-center pt-2">
                                        <button type="submit" class="btn btn-primary btn-sm">Atualizar</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation/dist/messages_pt_BR.js"></script>
    <script type="text/javascript">
        //$.validator.setDefaults({
        //    submitHandler: function () {
        //alert("submitted!");
        //return false;
        //    }
        //});

        $(document).ready(function () {
            $("#formPaciente").validate({
                rules: {
                    Nome: {
                        required: true,
                        minlength: 2,
                        maxLength: 100
                    },
                    NomeReduzido: {
                        required: true,
                        minlength: 2,
                        maxLength: 40
                    },
                    Cpf: {
                        required: true,
                        minlength: 14,
                        maxLength: 14
                    },
                    Email: {
                        required: true,
                        email: true,
                        maxLength: 80
                    }
                },
                errorElement: "span",
                errorPlacement: function (error, element) {
                    let customError = $([
                        '<span class="invalid-feedback mt-0 mb-2 d-block text-start">',
                        '  <span class="error-box mb-0 d-block"></span>',
                        '</span>'
                    ].join(""));

                    error.addClass("form-error-message");
                    error.appendTo(customError.find('.error-box'));
                    customError.insertBefore(element);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                    $(element).closest('.invalid-feedback').toggle();
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                    $(element).closest('.invalid-feedback').toggle();
                }
            });
        });
    </script>
}